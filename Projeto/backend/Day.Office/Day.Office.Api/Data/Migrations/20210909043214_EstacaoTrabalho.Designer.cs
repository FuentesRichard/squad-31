// <auto-generated />
using Day.Office.Api.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Day.Office.Api.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210909043214_EstacaoTrabalho")]
    partial class EstacaoTrabalho
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Day.Office.Api.Entities.Escritorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.Property<int>("EstacoesDeTrabalho")
                        .HasColumnType("integer");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("character varying(2)");

                    b.HasKey("Id");

                    b.ToTable("Escritorio");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cidade = "São Paulo",
                            EstacoesDeTrabalho = 600,
                            Estado = "SP"
                        },
                        new
                        {
                            Id = 2,
                            Cidade = "Santos",
                            EstacoesDeTrabalho = 100,
                            Estado = "SP"
                        });
                });

            modelBuilder.Entity("Day.Office.Api.Entities.EstacaoTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Estacao")
                        .HasColumnType("integer");

                    b.Property<int>("IdEscritorio")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IdEscritorio");

                    b.ToTable("EstacaoTrabalho");
                });

            modelBuilder.Entity("Day.Office.Api.Entities.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<string>("IdExterno")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.HasKey("Id");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("Day.Office.Api.Entities.EstacaoTrabalho", b =>
                {
                    b.HasOne("Day.Office.Api.Entities.Escritorio", "Escritorio")
                        .WithMany("EstacoesTrabalho")
                        .HasForeignKey("IdEscritorio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Escritorio");
                });

            modelBuilder.Entity("Day.Office.Api.Entities.Escritorio", b =>
                {
                    b.Navigation("EstacoesTrabalho");
                });
#pragma warning restore 612, 618
        }
    }
}
